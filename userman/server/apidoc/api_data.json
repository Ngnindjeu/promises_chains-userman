[
  {
    "type": "get",
    "url": "/login",
    "title": "Request login state",
    "name": "GetLogin",
    "group": "Login",
    "version": "2.0.0",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "User",
            "optional": false,
            "field": "user",
            "description": "<p>The user object</p>"
          },
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating that the user is still logged in</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"user\":{\n        \"id\":1,\n        \"username\":\"admin\",\n        \"firstName\":\"Peter\",\n        \"lastName\":\"Kneisel\",\n        \"creationTime\":\"2017-11-12T09:33:25.000Z\",\n        \"rights\":\"2\"\n     },\n     \"message\":\"User still logged in\"\n }",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Client Error": [
          {
            "group": "Client Error",
            "type": "401",
            "optional": false,
            "field": "SessionNotFound",
            "description": "<p>The session of the user is expired or was not set</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "SessionNotFound:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"message\":\"Session expired, please log in again.\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.ts",
    "groupTitle": "Login"
  },
  {
    "type": "get",
    "url": "/login",
    "title": "Request login state",
    "name": "GetLogin",
    "group": "Login",
    "version": "2.0.0",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "User",
            "optional": false,
            "field": "user",
            "description": "<p>The user object</p>"
          },
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating that the user is still logged in</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"user\":{\n        \"id\":1,\n        \"username\":\"admin\",\n        \"firstName\":\"Peter\",\n        \"lastName\":\"Kneisel\",\n        \"creationTime\":\"2017-11-12T09:33:25.000Z\",\n        \"rights\":\"2\"\n     },\n     \"message\":\"User still logged in\"\n }",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Client Error": [
          {
            "group": "Client Error",
            "type": "401",
            "optional": false,
            "field": "SessionNotFound",
            "description": "<p>The session of the user is expired or was not set</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "SessionNotFound:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"message\":\"Session expired, please log in again.\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.js",
    "groupTitle": "Login"
  },
  {
    "type": "post",
    "url": "/login",
    "title": "Send login request",
    "name": "PostLogin",
    "group": "Login",
    "version": "2.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "username",
            "description": "<p>Username of the user to log in</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>Password of the user to log in</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "User",
            "optional": false,
            "field": "user",
            "description": "<p>The user object</p>"
          },
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating the user logged in successfully</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"user\":{\n        \"id\":1,\n        \"username\":\"admin\",\n        \"firstName\":\"Peter\",\n        \"lastName\":\"Kneisel\",\n        \"creationTime\":\"2017-11-12T09:33:25.000Z\",\n        \"rights\":\"2\"\n    },\n    \"message\":\"Successfully logged in\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Client Error": [
          {
            "group": "Client Error",
            "type": "401",
            "optional": false,
            "field": "LoginIncorrect",
            "description": "<p>The login data provided is not correct.</p>"
          }
        ],
        "Server Error": [
          {
            "group": "Server Error",
            "type": "500",
            "optional": false,
            "field": "DatabaseRequestFailed",
            "description": "<p>The request to the database failed.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "LoginIncorrect:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"message\":\"Username or password is incorrect.\"\n}",
          "type": "json"
        },
        {
          "title": "DatabaseRequestFailed:",
          "content": "HTTP/1.1 500 Internal Server Errror\n{\n    \"message\":\"Database request failed: ...\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.ts",
    "groupTitle": "Login"
  },
  {
    "type": "post",
    "url": "/login",
    "title": "Send login request",
    "name": "PostLogin",
    "group": "Login",
    "version": "2.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "username",
            "description": "<p>Username of the user to log in</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>Password of the user to log in</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "User",
            "optional": false,
            "field": "user",
            "description": "<p>The user object</p>"
          },
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating the user logged in successfully</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"user\":{\n        \"id\":1,\n        \"username\":\"admin\",\n        \"firstName\":\"Peter\",\n        \"lastName\":\"Kneisel\",\n        \"creationTime\":\"2017-11-12T09:33:25.000Z\",\n        \"rights\":\"2\"\n    },\n    \"message\":\"Successfully logged in\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Client Error": [
          {
            "group": "Client Error",
            "type": "401",
            "optional": false,
            "field": "LoginIncorrect",
            "description": "<p>The login data provided is not correct.</p>"
          }
        ],
        "Server Error": [
          {
            "group": "Server Error",
            "type": "500",
            "optional": false,
            "field": "DatabaseRequestFailed",
            "description": "<p>The request to the database failed.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "LoginIncorrect:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"message\":\"Username or password is incorrect.\"\n}",
          "type": "json"
        },
        {
          "title": "DatabaseRequestFailed:",
          "content": "HTTP/1.1 500 Internal Server Errror\n{\n    \"message\":\"Database request failed: ...\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.js",
    "groupTitle": "Login"
  },
  {
    "type": "post",
    "url": "/logout",
    "title": "Logout user",
    "name": "PostLogout",
    "group": "Logout",
    "version": "2.0.0",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating that the user is logged out</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    message: \"Successfully logged out\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.ts",
    "groupTitle": "Logout"
  },
  {
    "type": "post",
    "url": "/logout",
    "title": "Logout user",
    "name": "PostLogout",
    "group": "Logout",
    "version": "2.0.0",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating that the user is logged out</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    message: \"Successfully logged out\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.js",
    "groupTitle": "Logout"
  },
  {
    "type": "delete",
    "url": "/user/:userId",
    "title": "Delete user with given id",
    "name": "deleteUser",
    "group": "User",
    "version": "2.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "number",
            "optional": false,
            "field": "userId",
            "description": "<p>The id of the requested user</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating the user has been updated</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"message\":\"Successfully deleted user ...\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.js",
    "groupTitle": "User",
    "error": {
      "fields": {
        "Client Error": [
          {
            "group": "Client Error",
            "type": "401",
            "optional": false,
            "field": "SessionNotFound",
            "description": "<p>The session of the user is expired or was not set</p>"
          },
          {
            "group": "Client Error",
            "type": "403",
            "optional": false,
            "field": "NotAuthorized",
            "description": "<p>The user trying to create a new user is not logged in</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "SessionNotFound:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"message\":\"Session expired, please log in again.\"\n}",
          "type": "json"
        },
        {
          "title": "NotAuthorized:",
          "content": "HTTP/1.1 403 Forbidden\n{\n    \"message\":\"Cannot create user since you have insufficient rights\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "delete",
    "url": "/user/:userId",
    "title": "Delete user with given id",
    "name": "deleteUser",
    "group": "User",
    "version": "2.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "number",
            "optional": false,
            "field": "userId",
            "description": "<p>The id of the requested user</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating the user has been updated</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"message\":\"Successfully deleted user ...\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.ts",
    "groupTitle": "User",
    "error": {
      "fields": {
        "Client Error": [
          {
            "group": "Client Error",
            "type": "401",
            "optional": false,
            "field": "SessionNotFound",
            "description": "<p>The session of the user is expired or was not set</p>"
          },
          {
            "group": "Client Error",
            "type": "403",
            "optional": false,
            "field": "NotAuthorized",
            "description": "<p>The user trying to create a new user is not logged in</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "SessionNotFound:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"message\":\"Session expired, please log in again.\"\n}",
          "type": "json"
        },
        {
          "title": "NotAuthorized:",
          "content": "HTTP/1.1 403 Forbidden\n{\n    \"message\":\"Cannot create user since you have insufficient rights\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/user:userId",
    "title": "Get user with given id",
    "name": "getUser",
    "group": "User",
    "version": "2.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "number",
            "optional": false,
            "field": "userId",
            "description": "<p>The id of the requested user</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "User",
            "optional": false,
            "field": "user",
            "description": "<p>The requested user object</p>"
          },
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating the user has been found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"user\":{\n        \"id\":1,\n        \"firstName\":\"Peter\",\n        \"lastName\":\"Kneisel\",\n        \"creationTime\":\"2018-10-21 14:19:12\"\n    },\n    \"message\":\"Successfully got user\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Client Error": [
          {
            "group": "Client Error",
            "type": "404",
            "optional": false,
            "field": "NotFound",
            "description": "<p>The requested user can not be found</p>"
          },
          {
            "group": "Client Error",
            "type": "401",
            "optional": false,
            "field": "SessionNotFound",
            "description": "<p>The session of the user is expired or was not set</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "NotFound:",
          "content": "HTTP/1.1 404 Not Found\n{\n    \"message\":\"The requested user can not be found.\"\n}",
          "type": "json"
        },
        {
          "title": "SessionNotFound:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"message\":\"Session expired, please log in again.\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.js",
    "groupTitle": "User"
  },
  {
    "type": "get",
    "url": "/user:userId",
    "title": "Get user with given id",
    "name": "getUser",
    "group": "User",
    "version": "2.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "number",
            "optional": false,
            "field": "userId",
            "description": "<p>The id of the requested user</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "User",
            "optional": false,
            "field": "user",
            "description": "<p>The requested user object</p>"
          },
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating the user has been found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"user\":{\n        \"id\":1,\n        \"firstName\":\"Peter\",\n        \"lastName\":\"Kneisel\",\n        \"creationTime\":\"2018-10-21 14:19:12\"\n    },\n    \"message\":\"Successfully got user\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Client Error": [
          {
            "group": "Client Error",
            "type": "404",
            "optional": false,
            "field": "NotFound",
            "description": "<p>The requested user can not be found</p>"
          },
          {
            "group": "Client Error",
            "type": "401",
            "optional": false,
            "field": "SessionNotFound",
            "description": "<p>The session of the user is expired or was not set</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "NotFound:",
          "content": "HTTP/1.1 404 Not Found\n{\n    \"message\":\"The requested user can not be found.\"\n}",
          "type": "json"
        },
        {
          "title": "SessionNotFound:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"message\":\"Session expired, please log in again.\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.ts",
    "groupTitle": "User"
  },
  {
    "type": "post",
    "url": "/user",
    "title": "Create a new user",
    "name": "postUser",
    "group": "User",
    "version": "2.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "firstName",
            "description": "<p>First name of the user</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "lastName",
            "description": "<p>Last name of the user</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating the new user has been created successfully</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"message\":\"Successfully created new user\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Client Error": [
          {
            "group": "Client Error",
            "type": "400",
            "optional": false,
            "field": "NotAllMandatoryFields",
            "description": "<p>The request did not contain all mandatory fields</p>"
          },
          {
            "group": "Client Error",
            "type": "401",
            "optional": false,
            "field": "SessionNotFound",
            "description": "<p>The session of the user is expired or was not set</p>"
          },
          {
            "group": "Client Error",
            "type": "403",
            "optional": false,
            "field": "NotAuthorized",
            "description": "<p>The user trying to create a new user is not logged in</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "NotAllMandatoryFields:",
          "content": "HTTP/1.1 400 Bad Request\n{\n    \"message\":\"Not all mandatory fields are filled in\"\n}",
          "type": "json"
        },
        {
          "title": "SessionNotFound:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"message\":\"Session expired, please log in again.\"\n}",
          "type": "json"
        },
        {
          "title": "NotAuthorized:",
          "content": "HTTP/1.1 403 Forbidden\n{\n    \"message\":\"Cannot create user since you have insufficient rights\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.js",
    "groupTitle": "User"
  },
  {
    "type": "post",
    "url": "/user",
    "title": "Create a new user",
    "name": "postUser",
    "group": "User",
    "version": "2.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "firstName",
            "description": "<p>First name of the user</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "lastName",
            "description": "<p>Last name of the user</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating the new user has been created successfully</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"message\":\"Successfully created new user\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Client Error": [
          {
            "group": "Client Error",
            "type": "400",
            "optional": false,
            "field": "NotAllMandatoryFields",
            "description": "<p>The request did not contain all mandatory fields</p>"
          },
          {
            "group": "Client Error",
            "type": "401",
            "optional": false,
            "field": "SessionNotFound",
            "description": "<p>The session of the user is expired or was not set</p>"
          },
          {
            "group": "Client Error",
            "type": "403",
            "optional": false,
            "field": "NotAuthorized",
            "description": "<p>The user trying to create a new user is not logged in</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "NotAllMandatoryFields:",
          "content": "HTTP/1.1 400 Bad Request\n{\n    \"message\":\"Not all mandatory fields are filled in\"\n}",
          "type": "json"
        },
        {
          "title": "SessionNotFound:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"message\":\"Session expired, please log in again.\"\n}",
          "type": "json"
        },
        {
          "title": "NotAuthorized:",
          "content": "HTTP/1.1 403 Forbidden\n{\n    \"message\":\"Cannot create user since you have insufficient rights\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.ts",
    "groupTitle": "User"
  },
  {
    "type": "put",
    "url": "/user/:userId",
    "title": "Update user with given id",
    "name": "putUser",
    "group": "User",
    "version": "2.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "number",
            "optional": false,
            "field": "userId",
            "description": "<p>The id of the requested user</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "firstName",
            "description": "<p>The (new) first name of the user</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "lastName",
            "description": "<p>The (new) last name of the user</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating the user has been updated</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"message\":\"Successfully updated user ...\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Client Error": [
          {
            "group": "Client Error",
            "type": "400",
            "optional": false,
            "field": "NotAllMandatoryFields",
            "description": "<p>The request did not contain all mandatory fields</p>"
          },
          {
            "group": "Client Error",
            "type": "404",
            "optional": false,
            "field": "NotFound",
            "description": "<p>The requested user can not be found</p>"
          },
          {
            "group": "Client Error",
            "type": "401",
            "optional": false,
            "field": "SessionNotFound",
            "description": "<p>The session of the user is expired or was not set</p>"
          },
          {
            "group": "Client Error",
            "type": "403",
            "optional": false,
            "field": "NotAuthorized",
            "description": "<p>The user trying to create a new user is not logged in</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "NotAllMandatoryFields:",
          "content": "HTTP/1.1 400 Bad Request\n{\n    \"message\":\"Not all mandatory fields are filled in\"\n}",
          "type": "json"
        },
        {
          "title": "NotFound:",
          "content": "HTTP/1.1 404 Not Found\n{\n    \"message\":\"The user to update could not be found\"\n}",
          "type": "json"
        },
        {
          "title": "SessionNotFound:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"message\":\"Session expired, please log in again.\"\n}",
          "type": "json"
        },
        {
          "title": "NotAuthorized:",
          "content": "HTTP/1.1 403 Forbidden\n{\n    \"message\":\"Cannot create user since you have insufficient rights\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.js",
    "groupTitle": "User"
  },
  {
    "type": "put",
    "url": "/user/:userId",
    "title": "Update user with given id",
    "name": "putUser",
    "group": "User",
    "version": "2.0.0",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "number",
            "optional": false,
            "field": "userId",
            "description": "<p>The id of the requested user</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "firstName",
            "description": "<p>The (new) first name of the user</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "lastName",
            "description": "<p>The (new) last name of the user</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating the user has been updated</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"message\":\"Successfully updated user ...\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Client Error": [
          {
            "group": "Client Error",
            "type": "400",
            "optional": false,
            "field": "NotAllMandatoryFields",
            "description": "<p>The request did not contain all mandatory fields</p>"
          },
          {
            "group": "Client Error",
            "type": "404",
            "optional": false,
            "field": "NotFound",
            "description": "<p>The requested user can not be found</p>"
          },
          {
            "group": "Client Error",
            "type": "401",
            "optional": false,
            "field": "SessionNotFound",
            "description": "<p>The session of the user is expired or was not set</p>"
          },
          {
            "group": "Client Error",
            "type": "403",
            "optional": false,
            "field": "NotAuthorized",
            "description": "<p>The user trying to create a new user is not logged in</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "NotAllMandatoryFields:",
          "content": "HTTP/1.1 400 Bad Request\n{\n    \"message\":\"Not all mandatory fields are filled in\"\n}",
          "type": "json"
        },
        {
          "title": "NotFound:",
          "content": "HTTP/1.1 404 Not Found\n{\n    \"message\":\"The user to update could not be found\"\n}",
          "type": "json"
        },
        {
          "title": "SessionNotFound:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"message\":\"Session expired, please log in again.\"\n}",
          "type": "json"
        },
        {
          "title": "NotAuthorized:",
          "content": "HTTP/1.1 403 Forbidden\n{\n    \"message\":\"Cannot create user since you have insufficient rights\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.ts",
    "groupTitle": "User"
  },
  {
    "type": "get",
    "url": "/users",
    "title": "Get all users",
    "name": "getUsers",
    "group": "Users",
    "version": "2.0.0",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "User[]",
            "optional": false,
            "field": "userList",
            "description": "<p>The list of all users</p>"
          },
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating the users have been found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n   \"userList\": [\n     {\n       \"firstName\": \"Hans\",\n       \"lastName\": \"Mustermann\",\n       \"creationTime\": \"2018-11-04T13:02:44.791Z\",\n       \"id\": 1\n    },\n     {\n       \"firstName\": \"Bruce\",\n       \"lastName\": \"Wayne\",\n       \"creationTime\": \"2018-11-04T13:03:18.477Z\",\n       \"id\": 2\n     }\n   ]\n   \"message\":\"Successfully requested user list\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.js",
    "groupTitle": "Users",
    "error": {
      "fields": {
        "Client Error": [
          {
            "group": "Client Error",
            "type": "401",
            "optional": false,
            "field": "SessionNotFound",
            "description": "<p>The session of the user is expired or was not set</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "SessionNotFound:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"message\":\"Session expired, please log in again.\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/users",
    "title": "Get all users",
    "name": "getUsers",
    "group": "Users",
    "version": "2.0.0",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "User[]",
            "optional": false,
            "field": "userList",
            "description": "<p>The list of all users</p>"
          },
          {
            "group": "Success 200",
            "type": "string",
            "optional": false,
            "field": "message",
            "description": "<p>Message stating the users have been found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n   \"userList\": [\n     {\n       \"firstName\": \"Hans\",\n       \"lastName\": \"Mustermann\",\n       \"creationTime\": \"2018-11-04T13:02:44.791Z\",\n       \"id\": 1\n    },\n     {\n       \"firstName\": \"Bruce\",\n       \"lastName\": \"Wayne\",\n       \"creationTime\": \"2018-11-04T13:03:18.477Z\",\n       \"id\": 2\n     }\n   ]\n   \"message\":\"Successfully requested user list\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/server.ts",
    "groupTitle": "Users",
    "error": {
      "fields": {
        "Client Error": [
          {
            "group": "Client Error",
            "type": "401",
            "optional": false,
            "field": "SessionNotFound",
            "description": "<p>The session of the user is expired or was not set</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "SessionNotFound:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"message\":\"Session expired, please log in again.\"\n}",
          "type": "json"
        }
      ]
    }
  }
]
